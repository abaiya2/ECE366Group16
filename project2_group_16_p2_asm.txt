ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
LD_R0     # R0 = M[R1] 
ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
MOV $6, $0     # $6 = $0
SLT108     # If R1 < 180, R2 = 1, Else R2 = 0 
BEZU $2, 10     # If $2 == 0, PC += 10
LD_R0     # R0 = M[R1] 
XOR     # R0 = R6 xor R0
CNT0     # R4 = #0s in R0 
STR_R4     # M[R1] = R4 
SLT $7, $2, $3   # If $7 < $2, $3 = 1 
BEZU $3, 2     # If $3 == 0, PC += 2
MOV $7, $2     # $7 = $2
ADD1 $1   # $1++ 
JMPN -10   # PC += -10
MOV $6, $7     # $6 = $7
STR $6, 4   # M[4] == $6
CLR $1      # $1 = 0 
ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
ADD1 $1   # $1++ 
CLR $6      # $6 = 0 
SLT108     # If R1 < 180, R2 = 1, Else R2 = 0 
BEZU $2, 7     # If $2 == 0, PC += 7
LD_R0     # R0 = M[R1] 
EQL $0, $7   # If $EQL == $0, R3 == 1 
BEZU $3, 2     # If $3 == 0, PC += 2
ADD1 $6   # $6++ 
ADD1 $1   # $1++ 
JMPN -7   # PC += -7
STR $6, 5   # M[5] == $6
