# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
     # R0 = M[R1] 
LD_R0
# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
# $6 = $0
MOV $6, $0
     # If R1 < 180, R2 = 1, Else R2 = 0 
SLT108
# If $2 == 0, PC += 10
BEZU $2, 10
     # R0 = M[R1] 
LD_R0
     # R0 = R6 xor R0
XOR
     # R4 = #0s in R0 
CNT0
     # M[R1] = R4 
STR_R4
# If $7 < $2, $3 = 1 
SLT $7, $2, $3
# If $3 == 0, PC += 2
BEZU $3, 2
# $7 = $2
MOV $7, $2
# $1++ 
ADD1 $1
# PC += -10
JMPN -10
# $6 = $7
MOV $6, $7
M[4] == $6
STR $6, 4
# $1 = 0 
CLR $1
# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
# $1++ 
ADD1 $1
# $6 = 0 
CLR $6
     # If R1 < 180, R2 = 1, Else R2 = 0 
SLT108
# If $2 == 0, PC += 7
BEZU $2, 7
     # R0 = M[R1] 
LD_R0
# If $EQL == $0, R3 == 1 
EQL $0, $7
# If $3 == 0, PC += 2
BEZU $3, 2
# $6++ 
ADD1 $6
# $1++ 
ADD1 $1
# PC += -7
JMPN -7
M[5] == $6
STR $6, 5
